// Copyright 2024 The Jumpstarter Authors
// (-- api-linter: core::0215::foreign-type-reference=disabled
// (-- api-linter: core::0192::has-comments=disabled
// (-- api-linter: core::0191::java-package=disabled
// (-- api-linter: core::0191::java-outer-classname=disabled
// (-- api-linter: core::0191::java-multiple-files=disabled

syntax = "proto3";

package jumpstarter.client.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "jumpstarter/v1/kubernetes.proto";

service ClientService {
  rpc GetExporter(GetExporterRequest) returns (Exporter) {
    option (google.api.http) = {get: "/v1/{name=namespaces/*/exporters/*}"};
    option (google.api.method_signature) = "name";
  }
  rpc ListExporters(ListExportersRequest) returns (ListExportersResponse) {
    option (google.api.http) = {get: "/v1/{parent=namespaces/*}/exporters"};
    option (google.api.method_signature) = "parent";
  }
  rpc CreateExporter(CreateExporterRequest) returns (Exporter) {
    option (google.api.http) = {
      post: "/v1/{parent=namespaces/*}/exporters"
      body: "exporter"
    };
    option (google.api.method_signature) = "parent,exporter,exporter_id";
  }
  rpc UpdateExporter(UpdateExporterRequest) returns (Exporter) {
    option (google.api.http) = {
      patch: "/v1/{exporter.name=namespaces/*/exporters/*}"
      body: "exporter"
    };
    option (google.api.method_signature) = "exporter,update_mask";
  }
  rpc DeleteExporter(DeleteExporterRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/v1/{name=namespaces/*/exporters/*}"};
    option (google.api.method_signature) = "name";
  }

  rpc GetClient(GetClientRequest) returns (Client) {
    option (google.api.http) = {get: "/v1/{name=namespaces/*/clients/*}"};
    option (google.api.method_signature) = "name";
  }
  rpc ListClients(ListClientsRequest) returns (ListClientsResponse) {
    option (google.api.http) = {get: "/v1/{parent=namespaces/*}/clients"};
    option (google.api.method_signature) = "parent";
  }
  rpc CreateClient(CreateClientRequest) returns (Client) {
    option (google.api.http) = {
      post: "/v1/{parent=namespaces/*}/clients"
      body: "client"
    };
    option (google.api.method_signature) = "parent,client,client_id";
  }
  rpc UpdateClient(UpdateClientRequest) returns (Client) {
    option (google.api.http) = {
      patch: "/v1/{client.name=namespaces/*/clients/*}"
      body: "client"
    };
    option (google.api.method_signature) = "client,update_mask";
  }
  rpc DeleteClient(DeleteClientRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/v1/{name=namespaces/*/clients/*}"};
    option (google.api.method_signature) = "name";
  }

  rpc GetLease(GetLeaseRequest) returns (Lease) {
    option (google.api.http) = {get: "/v1/{name=namespaces/*/leases/*}"};
    option (google.api.method_signature) = "name";
  }
  rpc ListLeases(ListLeasesRequest) returns (ListLeasesResponse) {
    option (google.api.http) = {get: "/v1/{parent=namespaces/*}/leases"};
    option (google.api.method_signature) = "parent";
  }
  rpc CreateLease(CreateLeaseRequest) returns (Lease) {
    option (google.api.http) = {
      post: "/v1/{parent=namespaces/*}/leases"
      body: "lease"
    };
    option (google.api.method_signature) = "parent,lease,lease_id";
  }
  rpc UpdateLease(UpdateLeaseRequest) returns (Lease) {
    option (google.api.http) = {
      patch: "/v1/{lease.name=namespaces/*/leases/*}"
      body: "lease"
    };
    option (google.api.method_signature) = "lease,update_mask";
  }
  rpc DeleteLease(DeleteLeaseRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/v1/{name=namespaces/*/leases/*}"};
    option (google.api.method_signature) = "name";
  }
}

message Exporter {
  option (google.api.resource) = {
    type: "jumpstarter.dev/Exporter"
    pattern: "namespaces/{namespace}/exporters/{exporter}"
    singular: "exporter"
    plural: "exporters"
  };

  string name = 1 [(google.api.field_behavior) = IDENTIFIER];
  map<string, string> labels = 2 [(google.api.field_behavior) = REQUIRED];
}

message Client {
  option (google.api.resource) = {
    type: "jumpstarter.dev/Client"
    pattern: "namespaces/{namespace}/clients/{client}"
    singular: "client"
    plural: "clients"
  };

  string name = 1 [(google.api.field_behavior) = IDENTIFIER];
  map<string, string> labels = 2 [(google.api.field_behavior) = REQUIRED];
}

message Lease {
  option (google.api.resource) = {
    type: "jumpstarter.dev/Lease"
    pattern: "namespaces/{namespace}/leases/{lease}"
    singular: "lease"
    plural: "leases"
  };

  string name = 1 [(google.api.field_behavior) = IDENTIFIER];

  string selector = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = IMMUTABLE
  ];
  google.protobuf.Duration duration = 3 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.Duration effective_duration = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  optional google.protobuf.Timestamp begin_time = 5;
  optional google.protobuf.Timestamp effective_begin_time = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
  optional google.protobuf.Timestamp end_time = 7;
  optional google.protobuf.Timestamp effective_end_time = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
  optional string client = 9 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.resource_reference) = {type: "jumpstarter.dev/Client"}
  ];
  optional string exporter = 10 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.resource_reference) = {type: "jumpstarter.dev/Exporter"}
  ];
  repeated jumpstarter.v1.Condition conditions = 11 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message GetExporterRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "jumpstarter.dev/Exporter"}
  ];
}

message ListExportersRequest {
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "jumpstarter.dev/Exporter"}
  ];
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
  string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

message ListExportersResponse {
  repeated Exporter exporters = 1;
  string next_page_token = 2;
}

message CreateExporterRequest {
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "jumpstarter.dev/Exporter"}
  ];

  string exporter_id = 2 [(google.api.field_behavior) = OPTIONAL];
  Exporter exporter = 3 [(google.api.field_behavior) = REQUIRED];
}

message UpdateExporterRequest {
  Exporter exporter = 1 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = OPTIONAL];
}

message DeleteExporterRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "jumpstarter.dev/Exporter"}
  ];
}

message GetClientRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "jumpstarter.dev/Client"}
  ];
}

message ListClientsRequest {
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "jumpstarter.dev/Client"}
  ];
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
  string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

message ListClientsResponse {
  repeated Client clients = 1;
  string next_page_token = 2;
}

message CreateClientRequest {
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "jumpstarter.dev/Client"}
  ];

  string client_id = 2 [(google.api.field_behavior) = OPTIONAL];
  Client client = 3 [(google.api.field_behavior) = REQUIRED];
}

message UpdateClientRequest {
  Client client = 1 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = OPTIONAL];
}

message DeleteClientRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "jumpstarter.dev/Client"}
  ];
}

message GetLeaseRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "jumpstarter.dev/Lease"}
  ];
}

message ListLeasesRequest {
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "jumpstarter.dev/Lease"}
  ];
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
  string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

message ListLeasesResponse {
  repeated Lease leases = 1;
  string next_page_token = 2;
}

message CreateLeaseRequest {
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "jumpstarter.dev/Lease"}
  ];

  string lease_id = 2 [(google.api.field_behavior) = OPTIONAL];
  Lease lease = 3 [(google.api.field_behavior) = REQUIRED];
}

message UpdateLeaseRequest {
  Lease lease = 1 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = OPTIONAL];
}

message DeleteLeaseRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "jumpstarter.dev/Lease"}
  ];
}
