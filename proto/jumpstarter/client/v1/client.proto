// Copyright 2024 The Jumpstarter Authors

syntax = "proto3";

package jumpstarter.client.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";

service ClientService {
  rpc GetExporter(GetExporterRequest) returns (Exporter) {
    option (google.api.http) = {get: "/v1/{name=namespaces/*/exporters/*}"};
    option (google.api.method_signature) = "name";
  }
  rpc ListExporters(ListExportersRequest) returns (ListExportersResponse) {
    option (google.api.http) = {get: "/v1/{parent=namespaces/*}/exporters"};
    option (google.api.method_signature) = "parent";
  }

  rpc GetLease(GetLeaseRequest) returns (Lease) {
    option (google.api.http) = {get: "/v1/{name=namespaces/*/leases/*}"};
    option (google.api.method_signature) = "name";
  }
  rpc ListLeases(ListLeasesRequest) returns (ListLeasesResponse) {
    option (google.api.http) = {get: "/v1/{parent=namespaces/*}/leases"};
    option (google.api.method_signature) = "parent";
  }
  rpc CreateLease(CreateLeaseRequest) returns (Lease) {
    option (google.api.http) = {
      post: "/v1/{parent=namespaces/*}/leases"
      body: "lease"
    };
    option (google.api.method_signature) = "parent,lease,lease_id";
  }
  rpc DeleteLease(DeleteLeaseRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/v1/{name=namespaces/*/leases/*}"};
    option (google.api.method_signature) = "name";
  }
}

message Exporter {
  option (google.api.resource) = {
    type: "jumpstarter.dev/Exporter"
    pattern: "namespaces/{namespace}/exporters/{exporter}"
    singular: "exporter"
    plural: "exporters"
  };

  string name = 1 [(google.api.field_behavior) = IDENTIFIER];
  map<string, string> labels = 2;
}

message Lease {
  option (google.api.resource) = {
    type: "jumpstarter.dev/Lease"
    pattern: "namespaces/{namespace}/leases/{lease}"
    singular: "lease"
    plural: "leases"
  };

  string name = 1 [(google.api.field_behavior) = IDENTIFIER];
}

message GetExporterRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "jumpstarter.dev/Exporter"}
  ];
}

message ListExportersRequest {
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "jumpstarter.dev/Exporter"}
  ];
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
  string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

message ListExportersResponse {
  repeated Exporter exporters = 1;
  string next_page_token = 2;
}

message GetLeaseRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "jumpstarter.dev/Lease"}
  ];
}

message ListLeasesRequest {
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "jumpstarter.dev/Lease"}
  ];
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
  string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

message ListLeasesResponse {
  repeated Lease leases = 1;
  string next_page_token = 2;
}

message CreateLeaseRequest {
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "jumpstarter.dev/Lease"}
  ];

  string lease_id = 2 [(google.api.field_behavior) = OPTIONAL];
  Lease lease = 3 [(google.api.field_behavior) = REQUIRED];
}

message DeleteLeaseRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "jumpstarter.dev/Lease"}
  ];
}
