// Copyright 2024 The Jumpstarter Authors

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: jumpstarter/v1/jumpstarter.proto

package jumpstarterv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// additional context:
	// - token/authentication mechanism
	Uuid   string            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// standard labels:
	// jumpstarter.dev/hostname=
	// jumpstarter.dev/name=
	DeviceReport []*DeviceReport `protobuf:"bytes,3,rep,name=device_report,json=deviceReport,proto3" json:"device_report,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RegisterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RegisterRequest) GetDeviceReport() []*DeviceReport {
	if x != nil {
		return x.DeviceReport
	}
	return nil
}

type DeviceReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceUuid       string            `protobuf:"bytes,1,opt,name=device_uuid,json=deviceUuid,proto3" json:"device_uuid,omitempty"`                           // a unique id within the expoter
	ParentDeviceUuid *string           `protobuf:"bytes,2,opt,name=parent_device_uuid,json=parentDeviceUuid,proto3,oneof" json:"parent_device_uuid,omitempty"` // optional, if device has a parent device
	DriverInterface  string            `protobuf:"bytes,3,opt,name=driver_interface,json=driverInterface,proto3" json:"driver_interface,omitempty"`            // The driver interface class
	Labels           map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DeviceReport) Reset() {
	*x = DeviceReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceReport) ProtoMessage() {}

func (x *DeviceReport) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceReport.ProtoReflect.Descriptor instead.
func (*DeviceReport) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceReport) GetDeviceUuid() string {
	if x != nil {
		return x.DeviceUuid
	}
	return ""
}

func (x *DeviceReport) GetParentDeviceUuid() string {
	if x != nil && x.ParentDeviceUuid != nil {
		return *x.ParentDeviceUuid
	}
	return ""
}

func (x *DeviceReport) GetDriverInterface() string {
	if x != nil {
		return x.DriverInterface
	}
	return ""
}

func (x *DeviceReport) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{2}
}

type ByeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// additional context:
	// - token/authentication mechanism
	Uuid   string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ByeRequest) Reset() {
	*x = ByeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByeRequest) ProtoMessage() {}

func (x *ByeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByeRequest.ProtoReflect.Descriptor instead.
func (*ByeRequest) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{3}
}

func (x *ByeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ByeRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ListenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListenRequest) Reset() {
	*x = ListenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenRequest) ProtoMessage() {}

func (x *ListenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenRequest.ProtoReflect.Descriptor instead.
func (*ListenRequest) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{4}
}

type ListenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterEndpoint string  `protobuf:"bytes,1,opt,name=router_endpoint,json=routerEndpoint,proto3" json:"router_endpoint,omitempty"`
	RouterToken    string  `protobuf:"bytes,2,opt,name=router_token,json=routerToken,proto3" json:"router_token,omitempty"`
	DeviceUuid     *string `protobuf:"bytes,3,opt,name=device_uuid,json=deviceUuid,proto3,oneof" json:"device_uuid,omitempty"`
}

func (x *ListenResponse) Reset() {
	*x = ListenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenResponse) ProtoMessage() {}

func (x *ListenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenResponse.ProtoReflect.Descriptor instead.
func (*ListenResponse) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{5}
}

func (x *ListenResponse) GetRouterEndpoint() string {
	if x != nil {
		return x.RouterEndpoint
	}
	return ""
}

func (x *ListenResponse) GetRouterToken() string {
	if x != nil {
		return x.RouterToken
	}
	return ""
}

func (x *ListenResponse) GetDeviceUuid() string {
	if x != nil && x.DeviceUuid != nil {
		return *x.DeviceUuid
	}
	return ""
}

type DialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	DeviceUuid *string `protobuf:"bytes,2,opt,name=device_uuid,json=deviceUuid,proto3,oneof" json:"device_uuid,omitempty"`
}

func (x *DialRequest) Reset() {
	*x = DialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialRequest) ProtoMessage() {}

func (x *DialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialRequest.ProtoReflect.Descriptor instead.
func (*DialRequest) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{6}
}

func (x *DialRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DialRequest) GetDeviceUuid() string {
	if x != nil && x.DeviceUuid != nil {
		return *x.DeviceUuid
	}
	return ""
}

type DialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterEndpoint string `protobuf:"bytes,1,opt,name=router_endpoint,json=routerEndpoint,proto3" json:"router_endpoint,omitempty"`
	RouterToken    string `protobuf:"bytes,2,opt,name=router_token,json=routerToken,proto3" json:"router_token,omitempty"`
}

func (x *DialResponse) Reset() {
	*x = DialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialResponse) ProtoMessage() {}

func (x *DialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialResponse.ProtoReflect.Descriptor instead.
func (*DialResponse) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{7}
}

func (x *DialResponse) GetRouterEndpoint() string {
	if x != nil {
		return x.RouterEndpoint
	}
	return ""
}

func (x *DialResponse) GetRouterToken() string {
	if x != nil {
		return x.RouterToken
	}
	return ""
}

type AuditStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// additional context:
	// - token/authentication mechanism
	Uuid       string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	DeviceUuid string `protobuf:"bytes,2,opt,name=device_uuid,json=deviceUuid,proto3" json:"device_uuid,omitempty"`
	Severity   string `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`
	Message    string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AuditStreamRequest) Reset() {
	*x = AuditStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditStreamRequest) ProtoMessage() {}

func (x *AuditStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditStreamRequest.ProtoReflect.Descriptor instead.
func (*AuditStreamRequest) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{8}
}

func (x *AuditStreamRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AuditStreamRequest) GetDeviceUuid() string {
	if x != nil {
		return x.DeviceUuid
	}
	return ""
}

func (x *AuditStreamRequest) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *AuditStreamRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// standard labels:
	// jumpstarter.dev/hostname=
	// jumpstarter.dev/name=
	DeviceReport []*DeviceReport `protobuf:"bytes,3,rep,name=device_report,json=deviceReport,proto3" json:"device_report,omitempty"`
}

func (x *GetReportResponse) Reset() {
	*x = GetReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportResponse) ProtoMessage() {}

func (x *GetReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportResponse.ProtoReflect.Descriptor instead.
func (*GetReportResponse) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{9}
}

func (x *GetReportResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetReportResponse) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetReportResponse) GetDeviceReport() []*DeviceReport {
	if x != nil {
		return x.DeviceReport
	}
	return nil
}

type DriverCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceUuid   string            `protobuf:"bytes,1,opt,name=device_uuid,json=deviceUuid,proto3" json:"device_uuid,omitempty"`
	DriverMethod string            `protobuf:"bytes,2,opt,name=driver_method,json=driverMethod,proto3" json:"driver_method,omitempty"`
	Args         []*structpb.Value `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *DriverCallRequest) Reset() {
	*x = DriverCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverCallRequest) ProtoMessage() {}

func (x *DriverCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverCallRequest.ProtoReflect.Descriptor instead.
func (*DriverCallRequest) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{10}
}

func (x *DriverCallRequest) GetDeviceUuid() string {
	if x != nil {
		return x.DeviceUuid
	}
	return ""
}

func (x *DriverCallRequest) GetDriverMethod() string {
	if x != nil {
		return x.DriverMethod
	}
	return ""
}

func (x *DriverCallRequest) GetArgs() []*structpb.Value {
	if x != nil {
		return x.Args
	}
	return nil
}

type DriverCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallUuid string          `protobuf:"bytes,1,opt,name=call_uuid,json=callUuid,proto3" json:"call_uuid,omitempty"`
	Result   *structpb.Value `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DriverCallResponse) Reset() {
	*x = DriverCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverCallResponse) ProtoMessage() {}

func (x *DriverCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverCallResponse.ProtoReflect.Descriptor instead.
func (*DriverCallResponse) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{11}
}

func (x *DriverCallResponse) GetCallUuid() string {
	if x != nil {
		return x.CallUuid
	}
	return ""
}

func (x *DriverCallResponse) GetResult() *structpb.Value {
	if x != nil {
		return x.Result
	}
	return nil
}

type StreamingDriverCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceUuid   string            `protobuf:"bytes,1,opt,name=device_uuid,json=deviceUuid,proto3" json:"device_uuid,omitempty"`
	DriverMethod string            `protobuf:"bytes,2,opt,name=driver_method,json=driverMethod,proto3" json:"driver_method,omitempty"`
	Args         []*structpb.Value `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *StreamingDriverCallRequest) Reset() {
	*x = StreamingDriverCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingDriverCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingDriverCallRequest) ProtoMessage() {}

func (x *StreamingDriverCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingDriverCallRequest.ProtoReflect.Descriptor instead.
func (*StreamingDriverCallRequest) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{12}
}

func (x *StreamingDriverCallRequest) GetDeviceUuid() string {
	if x != nil {
		return x.DeviceUuid
	}
	return ""
}

func (x *StreamingDriverCallRequest) GetDriverMethod() string {
	if x != nil {
		return x.DriverMethod
	}
	return ""
}

func (x *StreamingDriverCallRequest) GetArgs() []*structpb.Value {
	if x != nil {
		return x.Args
	}
	return nil
}

type StreamingDriverCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallUuid string          `protobuf:"bytes,1,opt,name=call_uuid,json=callUuid,proto3" json:"call_uuid,omitempty"`
	Result   *structpb.Value `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *StreamingDriverCallResponse) Reset() {
	*x = StreamingDriverCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingDriverCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingDriverCallResponse) ProtoMessage() {}

func (x *StreamingDriverCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingDriverCallResponse.ProtoReflect.Descriptor instead.
func (*StreamingDriverCallResponse) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{13}
}

func (x *StreamingDriverCallResponse) GetCallUuid() string {
	if x != nil {
		return x.CallUuid
	}
	return ""
}

func (x *StreamingDriverCallResponse) GetResult() *structpb.Value {
	if x != nil {
		return x.Result
	}
	return nil
}

type LogStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceUuid string `protobuf:"bytes,1,opt,name=device_uuid,json=deviceUuid,proto3" json:"device_uuid,omitempty"`
	Severity   string `protobuf:"bytes,2,opt,name=severity,proto3" json:"severity,omitempty"`
	Message    string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogStreamResponse) Reset() {
	*x = LogStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogStreamResponse) ProtoMessage() {}

func (x *LogStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogStreamResponse.ProtoReflect.Descriptor instead.
func (*LogStreamResponse) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{14}
}

func (x *LogStreamResponse) GetDeviceUuid() string {
	if x != nil {
		return x.DeviceUuid
	}
	return ""
}

func (x *LogStreamResponse) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *LogStreamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListExportersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListExportersRequest) Reset() {
	*x = ListExportersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExportersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExportersRequest) ProtoMessage() {}

func (x *ListExportersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExportersRequest.ProtoReflect.Descriptor instead.
func (*ListExportersRequest) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{15}
}

func (x *ListExportersRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListExportersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceReports []*GetReportResponse `protobuf:"bytes,1,rep,name=device_reports,json=deviceReports,proto3" json:"device_reports,omitempty"`
}

func (x *ListExportersResponse) Reset() {
	*x = ListExportersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExportersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExportersResponse) ProtoMessage() {}

func (x *ListExportersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExportersResponse.ProtoReflect.Descriptor instead.
func (*ListExportersResponse) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{16}
}

func (x *ListExportersResponse) GetDeviceReports() []*GetReportResponse {
	if x != nil {
		return x.DeviceReports
	}
	return nil
}

type GetExporterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetExporterRequest) Reset() {
	*x = GetExporterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExporterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExporterRequest) ProtoMessage() {}

func (x *GetExporterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExporterRequest.ProtoReflect.Descriptor instead.
func (*GetExporterRequest) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{17}
}

func (x *GetExporterRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetExporterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceReport []*GetReportResponse `protobuf:"bytes,1,rep,name=device_report,json=deviceReport,proto3" json:"device_report,omitempty"`
}

func (x *GetExporterResponse) Reset() {
	*x = GetExporterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExporterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExporterResponse) ProtoMessage() {}

func (x *GetExporterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExporterResponse.ProtoReflect.Descriptor instead.
func (*GetExporterResponse) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{18}
}

func (x *GetExporterResponse) GetDeviceReport() []*GetReportResponse {
	if x != nil {
		return x.DeviceReport
	}
	return nil
}

type LeaseExporterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Duration *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *LeaseExporterRequest) Reset() {
	*x = LeaseExporterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseExporterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseExporterRequest) ProtoMessage() {}

func (x *LeaseExporterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseExporterRequest.ProtoReflect.Descriptor instead.
func (*LeaseExporterRequest) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{19}
}

func (x *LeaseExporterRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *LeaseExporterRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type LeaseExporterResponseSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration *durationpb.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *LeaseExporterResponseSuccess) Reset() {
	*x = LeaseExporterResponseSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseExporterResponseSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseExporterResponseSuccess) ProtoMessage() {}

func (x *LeaseExporterResponseSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseExporterResponseSuccess.ProtoReflect.Descriptor instead.
func (*LeaseExporterResponseSuccess) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{20}
}

func (x *LeaseExporterResponseSuccess) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type LeaseExporterResponseFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *LeaseExporterResponseFailure) Reset() {
	*x = LeaseExporterResponseFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseExporterResponseFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseExporterResponseFailure) ProtoMessage() {}

func (x *LeaseExporterResponseFailure) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseExporterResponseFailure.ProtoReflect.Descriptor instead.
func (*LeaseExporterResponseFailure) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{21}
}

func (x *LeaseExporterResponseFailure) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type LeaseExporterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to LeaseExporterResponseOneof:
	//
	//	*LeaseExporterResponse_Success
	//	*LeaseExporterResponse_Failure
	LeaseExporterResponseOneof isLeaseExporterResponse_LeaseExporterResponseOneof `protobuf_oneof:"lease_exporter_response_oneof"`
}

func (x *LeaseExporterResponse) Reset() {
	*x = LeaseExporterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseExporterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseExporterResponse) ProtoMessage() {}

func (x *LeaseExporterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseExporterResponse.ProtoReflect.Descriptor instead.
func (*LeaseExporterResponse) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{22}
}

func (m *LeaseExporterResponse) GetLeaseExporterResponseOneof() isLeaseExporterResponse_LeaseExporterResponseOneof {
	if m != nil {
		return m.LeaseExporterResponseOneof
	}
	return nil
}

func (x *LeaseExporterResponse) GetSuccess() *LeaseExporterResponseSuccess {
	if x, ok := x.GetLeaseExporterResponseOneof().(*LeaseExporterResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *LeaseExporterResponse) GetFailure() *LeaseExporterResponseFailure {
	if x, ok := x.GetLeaseExporterResponseOneof().(*LeaseExporterResponse_Failure); ok {
		return x.Failure
	}
	return nil
}

type isLeaseExporterResponse_LeaseExporterResponseOneof interface {
	isLeaseExporterResponse_LeaseExporterResponseOneof()
}

type LeaseExporterResponse_Success struct {
	Success *LeaseExporterResponseSuccess `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type LeaseExporterResponse_Failure struct {
	Failure *LeaseExporterResponseFailure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*LeaseExporterResponse_Success) isLeaseExporterResponse_LeaseExporterResponseOneof() {}

func (*LeaseExporterResponse_Failure) isLeaseExporterResponse_LeaseExporterResponseOneof() {}

type ReleaseExporterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ReleaseExporterRequest) Reset() {
	*x = ReleaseExporterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseExporterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseExporterRequest) ProtoMessage() {}

func (x *ReleaseExporterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseExporterRequest.ProtoReflect.Descriptor instead.
func (*ReleaseExporterRequest) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{23}
}

func (x *ReleaseExporterRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ReleaseExporterResponseSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReleaseExporterResponseSuccess) Reset() {
	*x = ReleaseExporterResponseSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseExporterResponseSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseExporterResponseSuccess) ProtoMessage() {}

func (x *ReleaseExporterResponseSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseExporterResponseSuccess.ProtoReflect.Descriptor instead.
func (*ReleaseExporterResponseSuccess) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{24}
}

type ReleaseExporterResponseFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ReleaseExporterResponseFailure) Reset() {
	*x = ReleaseExporterResponseFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseExporterResponseFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseExporterResponseFailure) ProtoMessage() {}

func (x *ReleaseExporterResponseFailure) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseExporterResponseFailure.ProtoReflect.Descriptor instead.
func (*ReleaseExporterResponseFailure) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{25}
}

func (x *ReleaseExporterResponseFailure) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ReleaseExporterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ReleaseExporterResponseOneof:
	//
	//	*ReleaseExporterResponse_Success
	//	*ReleaseExporterResponse_Failure
	ReleaseExporterResponseOneof isReleaseExporterResponse_ReleaseExporterResponseOneof `protobuf_oneof:"release_exporter_response_oneof"`
}

func (x *ReleaseExporterResponse) Reset() {
	*x = ReleaseExporterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseExporterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseExporterResponse) ProtoMessage() {}

func (x *ReleaseExporterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jumpstarter_v1_jumpstarter_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseExporterResponse.ProtoReflect.Descriptor instead.
func (*ReleaseExporterResponse) Descriptor() ([]byte, []int) {
	return file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP(), []int{26}
}

func (m *ReleaseExporterResponse) GetReleaseExporterResponseOneof() isReleaseExporterResponse_ReleaseExporterResponseOneof {
	if m != nil {
		return m.ReleaseExporterResponseOneof
	}
	return nil
}

func (x *ReleaseExporterResponse) GetSuccess() *ReleaseExporterResponseSuccess {
	if x, ok := x.GetReleaseExporterResponseOneof().(*ReleaseExporterResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *ReleaseExporterResponse) GetFailure() *ReleaseExporterResponseFailure {
	if x, ok := x.GetReleaseExporterResponseOneof().(*ReleaseExporterResponse_Failure); ok {
		return x.Failure
	}
	return nil
}

type isReleaseExporterResponse_ReleaseExporterResponseOneof interface {
	isReleaseExporterResponse_ReleaseExporterResponseOneof()
}

type ReleaseExporterResponse_Success struct {
	Success *ReleaseExporterResponseSuccess `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type ReleaseExporterResponse_Failure struct {
	Failure *ReleaseExporterResponseFailure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*ReleaseExporterResponse_Success) isReleaseExporterResponse_ReleaseExporterResponseOneof() {}

func (*ReleaseExporterResponse_Failure) isReleaseExporterResponse_ReleaseExporterResponseOneof() {}

var File_jumpstarter_v1_jumpstarter_proto protoreflect.FileDescriptor

var file_jumpstarter_v1_jumpstarter_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x01,
	0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x39, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x02, 0x0a, 0x0c, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x12, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a,
	0x10, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x22, 0x12, 0x0a, 0x10,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x38, 0x0a, 0x0a, 0x42, 0x79, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x0e,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x22, 0x57, 0x0a, 0x0b, 0x44, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x22, 0x5a, 0x0a, 0x0c, 0x44, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7f, 0x0a, 0x12, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x45, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0c, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x2a, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x61, 0x0a,
	0x12, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x8e, 0x01, 0x0a, 0x1a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x22, 0x6a, 0x0a, 0x1b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6a, 0x0a,
	0x11, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x48, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x61, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0x61, 0x0a, 0x14, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x1c, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a,
	0x1c, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xcc, 0x01, 0x0a, 0x15, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x48, 0x0a, 0x07, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6a, 0x75, 0x6d,
	0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x42, 0x1f, 0x0a, 0x1d, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6f,
	0x6e, 0x65, 0x6f, 0x66, 0x22, 0x2c, 0x0a, 0x16, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x38, 0x0a, 0x1e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xd4,
	0x01, 0x0a, 0x17, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6a, 0x75,
	0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x4a, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x42, 0x21, 0x0a, 0x1f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x65, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x32, 0xf0, 0x05, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x03, 0x42, 0x79,
	0x65, 0x12, 0x1a, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x79, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x06, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12,
	0x1d, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01,
	0x12, 0x41, 0x0a, 0x04, 0x44, 0x69, 0x61, 0x6c, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x22, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x01,
	0x12, 0x5c, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x24, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12, 0x22, 0x2e,
	0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xea, 0x02, 0x0a, 0x0f, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x21, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x61,
	0x6c, 0x6c, 0x12, 0x21, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x13, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c,
	0x12, 0x2a, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6a,
	0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x48, 0x0a, 0x09, 0x4c,
	0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x21, 0x2e, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0xcd, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x75,
	0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x4a, 0x75,
	0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x75, 0x6d,
	0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x6a, 0x75, 0x6d,
	0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x3b, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x4a, 0x58, 0x58, 0xaa, 0x02, 0x0e, 0x4a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x4a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x4a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x4a, 0x75, 0x6d, 0x70, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jumpstarter_v1_jumpstarter_proto_rawDescOnce sync.Once
	file_jumpstarter_v1_jumpstarter_proto_rawDescData = file_jumpstarter_v1_jumpstarter_proto_rawDesc
)

func file_jumpstarter_v1_jumpstarter_proto_rawDescGZIP() []byte {
	file_jumpstarter_v1_jumpstarter_proto_rawDescOnce.Do(func() {
		file_jumpstarter_v1_jumpstarter_proto_rawDescData = protoimpl.X.CompressGZIP(file_jumpstarter_v1_jumpstarter_proto_rawDescData)
	})
	return file_jumpstarter_v1_jumpstarter_proto_rawDescData
}

var file_jumpstarter_v1_jumpstarter_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_jumpstarter_v1_jumpstarter_proto_goTypes = []any{
	(*RegisterRequest)(nil),                // 0: jumpstarter.v1.RegisterRequest
	(*DeviceReport)(nil),                   // 1: jumpstarter.v1.DeviceReport
	(*RegisterResponse)(nil),               // 2: jumpstarter.v1.RegisterResponse
	(*ByeRequest)(nil),                     // 3: jumpstarter.v1.ByeRequest
	(*ListenRequest)(nil),                  // 4: jumpstarter.v1.ListenRequest
	(*ListenResponse)(nil),                 // 5: jumpstarter.v1.ListenResponse
	(*DialRequest)(nil),                    // 6: jumpstarter.v1.DialRequest
	(*DialResponse)(nil),                   // 7: jumpstarter.v1.DialResponse
	(*AuditStreamRequest)(nil),             // 8: jumpstarter.v1.AuditStreamRequest
	(*GetReportResponse)(nil),              // 9: jumpstarter.v1.GetReportResponse
	(*DriverCallRequest)(nil),              // 10: jumpstarter.v1.DriverCallRequest
	(*DriverCallResponse)(nil),             // 11: jumpstarter.v1.DriverCallResponse
	(*StreamingDriverCallRequest)(nil),     // 12: jumpstarter.v1.StreamingDriverCallRequest
	(*StreamingDriverCallResponse)(nil),    // 13: jumpstarter.v1.StreamingDriverCallResponse
	(*LogStreamResponse)(nil),              // 14: jumpstarter.v1.LogStreamResponse
	(*ListExportersRequest)(nil),           // 15: jumpstarter.v1.ListExportersRequest
	(*ListExportersResponse)(nil),          // 16: jumpstarter.v1.ListExportersResponse
	(*GetExporterRequest)(nil),             // 17: jumpstarter.v1.GetExporterRequest
	(*GetExporterResponse)(nil),            // 18: jumpstarter.v1.GetExporterResponse
	(*LeaseExporterRequest)(nil),           // 19: jumpstarter.v1.LeaseExporterRequest
	(*LeaseExporterResponseSuccess)(nil),   // 20: jumpstarter.v1.LeaseExporterResponseSuccess
	(*LeaseExporterResponseFailure)(nil),   // 21: jumpstarter.v1.LeaseExporterResponseFailure
	(*LeaseExporterResponse)(nil),          // 22: jumpstarter.v1.LeaseExporterResponse
	(*ReleaseExporterRequest)(nil),         // 23: jumpstarter.v1.ReleaseExporterRequest
	(*ReleaseExporterResponseSuccess)(nil), // 24: jumpstarter.v1.ReleaseExporterResponseSuccess
	(*ReleaseExporterResponseFailure)(nil), // 25: jumpstarter.v1.ReleaseExporterResponseFailure
	(*ReleaseExporterResponse)(nil),        // 26: jumpstarter.v1.ReleaseExporterResponse
	nil,                                    // 27: jumpstarter.v1.RegisterRequest.LabelsEntry
	nil,                                    // 28: jumpstarter.v1.DeviceReport.LabelsEntry
	nil,                                    // 29: jumpstarter.v1.GetReportResponse.LabelsEntry
	nil,                                    // 30: jumpstarter.v1.ListExportersRequest.LabelsEntry
	(*structpb.Value)(nil),                 // 31: google.protobuf.Value
	(*durationpb.Duration)(nil),            // 32: google.protobuf.Duration
	(*emptypb.Empty)(nil),                  // 33: google.protobuf.Empty
}
var file_jumpstarter_v1_jumpstarter_proto_depIdxs = []int32{
	27, // 0: jumpstarter.v1.RegisterRequest.labels:type_name -> jumpstarter.v1.RegisterRequest.LabelsEntry
	1,  // 1: jumpstarter.v1.RegisterRequest.device_report:type_name -> jumpstarter.v1.DeviceReport
	28, // 2: jumpstarter.v1.DeviceReport.labels:type_name -> jumpstarter.v1.DeviceReport.LabelsEntry
	29, // 3: jumpstarter.v1.GetReportResponse.labels:type_name -> jumpstarter.v1.GetReportResponse.LabelsEntry
	1,  // 4: jumpstarter.v1.GetReportResponse.device_report:type_name -> jumpstarter.v1.DeviceReport
	31, // 5: jumpstarter.v1.DriverCallRequest.args:type_name -> google.protobuf.Value
	31, // 6: jumpstarter.v1.DriverCallResponse.result:type_name -> google.protobuf.Value
	31, // 7: jumpstarter.v1.StreamingDriverCallRequest.args:type_name -> google.protobuf.Value
	31, // 8: jumpstarter.v1.StreamingDriverCallResponse.result:type_name -> google.protobuf.Value
	30, // 9: jumpstarter.v1.ListExportersRequest.labels:type_name -> jumpstarter.v1.ListExportersRequest.LabelsEntry
	9,  // 10: jumpstarter.v1.ListExportersResponse.device_reports:type_name -> jumpstarter.v1.GetReportResponse
	9,  // 11: jumpstarter.v1.GetExporterResponse.device_report:type_name -> jumpstarter.v1.GetReportResponse
	32, // 12: jumpstarter.v1.LeaseExporterRequest.duration:type_name -> google.protobuf.Duration
	32, // 13: jumpstarter.v1.LeaseExporterResponseSuccess.duration:type_name -> google.protobuf.Duration
	20, // 14: jumpstarter.v1.LeaseExporterResponse.success:type_name -> jumpstarter.v1.LeaseExporterResponseSuccess
	21, // 15: jumpstarter.v1.LeaseExporterResponse.failure:type_name -> jumpstarter.v1.LeaseExporterResponseFailure
	24, // 16: jumpstarter.v1.ReleaseExporterResponse.success:type_name -> jumpstarter.v1.ReleaseExporterResponseSuccess
	25, // 17: jumpstarter.v1.ReleaseExporterResponse.failure:type_name -> jumpstarter.v1.ReleaseExporterResponseFailure
	0,  // 18: jumpstarter.v1.ControllerService.Register:input_type -> jumpstarter.v1.RegisterRequest
	3,  // 19: jumpstarter.v1.ControllerService.Bye:input_type -> jumpstarter.v1.ByeRequest
	4,  // 20: jumpstarter.v1.ControllerService.Listen:input_type -> jumpstarter.v1.ListenRequest
	6,  // 21: jumpstarter.v1.ControllerService.Dial:input_type -> jumpstarter.v1.DialRequest
	8,  // 22: jumpstarter.v1.ControllerService.AuditStream:input_type -> jumpstarter.v1.AuditStreamRequest
	15, // 23: jumpstarter.v1.ControllerService.ListExporters:input_type -> jumpstarter.v1.ListExportersRequest
	17, // 24: jumpstarter.v1.ControllerService.GetExporter:input_type -> jumpstarter.v1.GetExporterRequest
	19, // 25: jumpstarter.v1.ControllerService.LeaseExporter:input_type -> jumpstarter.v1.LeaseExporterRequest
	23, // 26: jumpstarter.v1.ControllerService.ReleaseExporter:input_type -> jumpstarter.v1.ReleaseExporterRequest
	33, // 27: jumpstarter.v1.ExporterService.GetReport:input_type -> google.protobuf.Empty
	10, // 28: jumpstarter.v1.ExporterService.DriverCall:input_type -> jumpstarter.v1.DriverCallRequest
	12, // 29: jumpstarter.v1.ExporterService.StreamingDriverCall:input_type -> jumpstarter.v1.StreamingDriverCallRequest
	33, // 30: jumpstarter.v1.ExporterService.LogStream:input_type -> google.protobuf.Empty
	2,  // 31: jumpstarter.v1.ControllerService.Register:output_type -> jumpstarter.v1.RegisterResponse
	33, // 32: jumpstarter.v1.ControllerService.Bye:output_type -> google.protobuf.Empty
	5,  // 33: jumpstarter.v1.ControllerService.Listen:output_type -> jumpstarter.v1.ListenResponse
	7,  // 34: jumpstarter.v1.ControllerService.Dial:output_type -> jumpstarter.v1.DialResponse
	33, // 35: jumpstarter.v1.ControllerService.AuditStream:output_type -> google.protobuf.Empty
	16, // 36: jumpstarter.v1.ControllerService.ListExporters:output_type -> jumpstarter.v1.ListExportersResponse
	18, // 37: jumpstarter.v1.ControllerService.GetExporter:output_type -> jumpstarter.v1.GetExporterResponse
	22, // 38: jumpstarter.v1.ControllerService.LeaseExporter:output_type -> jumpstarter.v1.LeaseExporterResponse
	26, // 39: jumpstarter.v1.ControllerService.ReleaseExporter:output_type -> jumpstarter.v1.ReleaseExporterResponse
	9,  // 40: jumpstarter.v1.ExporterService.GetReport:output_type -> jumpstarter.v1.GetReportResponse
	11, // 41: jumpstarter.v1.ExporterService.DriverCall:output_type -> jumpstarter.v1.DriverCallResponse
	13, // 42: jumpstarter.v1.ExporterService.StreamingDriverCall:output_type -> jumpstarter.v1.StreamingDriverCallResponse
	14, // 43: jumpstarter.v1.ExporterService.LogStream:output_type -> jumpstarter.v1.LogStreamResponse
	31, // [31:44] is the sub-list for method output_type
	18, // [18:31] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_jumpstarter_v1_jumpstarter_proto_init() }
func file_jumpstarter_v1_jumpstarter_proto_init() {
	if File_jumpstarter_v1_jumpstarter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DeviceReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ByeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AuditStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DriverCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DriverCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*StreamingDriverCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*StreamingDriverCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*LogStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ListExportersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ListExportersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetExporterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetExporterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*LeaseExporterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*LeaseExporterResponseSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*LeaseExporterResponseFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*LeaseExporterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ReleaseExporterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ReleaseExporterResponseSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ReleaseExporterResponseFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jumpstarter_v1_jumpstarter_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ReleaseExporterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_jumpstarter_v1_jumpstarter_proto_msgTypes[1].OneofWrappers = []any{}
	file_jumpstarter_v1_jumpstarter_proto_msgTypes[5].OneofWrappers = []any{}
	file_jumpstarter_v1_jumpstarter_proto_msgTypes[6].OneofWrappers = []any{}
	file_jumpstarter_v1_jumpstarter_proto_msgTypes[22].OneofWrappers = []any{
		(*LeaseExporterResponse_Success)(nil),
		(*LeaseExporterResponse_Failure)(nil),
	}
	file_jumpstarter_v1_jumpstarter_proto_msgTypes[26].OneofWrappers = []any{
		(*ReleaseExporterResponse_Success)(nil),
		(*ReleaseExporterResponse_Failure)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jumpstarter_v1_jumpstarter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_jumpstarter_v1_jumpstarter_proto_goTypes,
		DependencyIndexes: file_jumpstarter_v1_jumpstarter_proto_depIdxs,
		MessageInfos:      file_jumpstarter_v1_jumpstarter_proto_msgTypes,
	}.Build()
	File_jumpstarter_v1_jumpstarter_proto = out.File
	file_jumpstarter_v1_jumpstarter_proto_rawDesc = nil
	file_jumpstarter_v1_jumpstarter_proto_goTypes = nil
	file_jumpstarter_v1_jumpstarter_proto_depIdxs = nil
}
